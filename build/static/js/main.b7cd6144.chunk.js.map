{"version":3,"sources":["context.js","components/Navbar.js","services/AbstractApi.js","services/MockApiService.js","services/SWApiService.js","components/Loader/Loader.js","components/ErrorMessage/ErrorMessage.js","components/RandomPlanet/RandomPlanet.js","hocs/withApiService.js","components/RandomPlanet/index.js","pages/Home/Home.js","components/Row.js","components/ItemDetails/ItemDetails.js","components/ItemList/ItemList.js","hocs/withData.js","components/ErrorBoundary.js","pages/People/People.js","pages/Planets/Planets.js","pages/Starships/Starships.js","pages/ErrorPage.js","components/Routes.js","App.js","index.js"],"names":["apiContext","React","createContext","links","to","title","exact","Navbar","props","serviceName","onServiceChange","className","id","map","link","key","type","onClick","defaultProps","toggleService","AbstractApi","baseUrl","getPerson","a","async","TypeError","getAllPeople","getPlanet","getAllPlanets","getShip","getAllShips","ApiTransformer","resource","url","match","planet","person","ship","MockResourceGenerator","gender","faker","random","arrayElement","name","findName","height","number","min","max","mass","hairColor","internet","color","skinColor","eyeColor","birthYear","firstName","population","diameter","rotationPeriod","orbitalPeriod","climate","terrain","surfaceWater","model","manufacturer","class","cost","hyperdrive","mglt","length","cargo","crew","passengers","imageSrc","MockApiService","generator","_delay","process","items","Array","from","value","index","makePerson","_delayed","makePlanet","makeShip","data","Promise","resolve","reject","setTimeout","SWApiTransformer","this","extractId","rotation_period","orbital_period","surface_water","hair_color","skin_color","eye_color","birth_year","starship_class","cost_in_credits","hyperdrive_rating","MGLT","cargo_capacity","SWApiService","transformer","getResource","res","results","transformPerson","transformPlanet","transformShip","fetch","response","ok","Error","status","json","body","Loader","role","ErrorMessage","error","RandomPlanet","state","isLoading","onError","setState","updateData","getData","Math","floor","then","catch","ViewPlanet","Component","displayProps","elements","Object","keys","src","alt","withApiService","mapMethodsToProps","WrappedComponent","Consumer","apiService","mappedProps","entries","Home","Row","left","right","Record","item","field","label","children","ItemDetails","prevProps","itemId","Children","child","cloneElement","ItemList","selectedItemId","selectItem","onItemSelected","renderItem","classNames","withData","ErrorBoundary","hasError","PersonDetails","PeopleList","withRouter","history","params","list","push","toString","details","PlanetDetails","PlanetList","ShipDetails","ShipList","v","Number","toLocaleString","toFixed","ErrorPage","Routes","path","component","HomePage","PlanetsPage","PeoplePage","StarshipsPage","App","document","Provider","basename","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b7cd6144.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst apiContext = React.createContext()\r\n\r\nexport default apiContext\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst links = [\r\n  { to: '/', title: 'Home', exact: true },\r\n  { to: '/people/', title: 'People' },\r\n  { to: '/planets/', title: 'Planets' },\r\n  { to: '/starships/', title: 'Starships' }\r\n]\r\n\r\nexport default function Navbar(props) {\r\n  const { serviceName, onServiceChange } = props\r\n\r\n  return(\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <NavLink to=\"/\" exact className=\"navbar-brand\">StarWars Database</NavLink>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          { links.map( link => \r\n            <NavLink\r\n              to={ link.to }\r\n              exact={ link.exact }\r\n              key={ link.to }\r\n              className=\"nav-link\"\r\n            >{ link.title }</NavLink>\r\n          )}\r\n        </ul>\r\n\r\n        <form className=\"form-inline ml-3\">\r\n          Current API: { serviceName }\r\n          <button\r\n            className=\"btn btn-sm btn-outline-success ml-1\"\r\n            type=\"button\"\r\n            onClick={ onServiceChange }\r\n          >Switch</button>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  serviceName: PropTypes.string,\r\n  onServiceChange: PropTypes.func\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  serviceName: 'Unknown',\r\n  toggleService: () => {}\r\n}\r\n","export class AbstractApi {\r\n  baseUrl = ''\r\n\r\n  getPerson = async () => {\r\n    throw new TypeError(\"Must override method\")\r\n  }\r\n\r\n  getAllPeople = async () => {\r\n    throw new TypeError(\"Must override method\")\r\n  }\r\n\r\n  getPlanet = async () => {\r\n    throw new TypeError(\"Must override method\")\r\n  }\r\n\r\n  getAllPlanets = async () => {\r\n    throw new TypeError(\"Must override method\")\r\n  }\r\n\r\n  getShip = async () => {\r\n    throw new TypeError(\"Must override method\")\r\n  }\r\n\r\n  getAllShips = async () => {\r\n    throw new TypeError(\"Must override method\")\r\n  }\r\n}\r\n\r\n\r\nexport class ApiTransformer {\r\n  extractId(resource) {\r\n    return resource.url.match(/\\/(\\d+)\\/$/)[1]\r\n  }\r\n\r\n  transformPlanet(planet) {\r\n    return planet\r\n  }\r\n\r\n  transformPerson(person) {\r\n    return person\r\n  }\r\n\r\n  transformShip(ship) {\r\n    return ship\r\n  }\r\n}\r\n","import faker from 'faker'\r\nimport { AbstractApi } from './AbstractApi'\r\n\r\n\r\nclass MockResourceGenerator {\r\n  makePerson(id) {\r\n    const gender = faker.random.arrayElement(['male', 'female'])\r\n    return {\r\n      id,\r\n      name: faker.name.findName(null, null, gender),\r\n      height: faker.random.number({ min: 150, max: 200 }),\r\n      mass: faker.random.number({ min: 50, max: 200 }),\r\n      hairColor: faker.internet.color(),\r\n      skinColor: faker.internet.color(),\r\n      eyeColor: faker.internet.color(),\r\n      birthYear: `${ faker.random.number(30) }BBY`,\r\n      gender: gender,\r\n    }\r\n  }\r\n\r\n  makePlanet(id) {\r\n    return {\r\n      id,\r\n      name: faker.name.firstName(),\r\n      population: faker.random.number(100000000),\r\n      diameter: faker.random.number(100000),\r\n      rotationPeriod: faker.random.number(40),\r\n      orbitalPeriod: faker.random.number(1000),\r\n      climate: '',\r\n      terrain: '',\r\n      surfaceWater: faker.random.number(100)\r\n    }\r\n  }\r\n\r\n  makeShip(id) {\r\n    return {\r\n      id,\r\n      name: faker.name.firstName(),\r\n      mass: faker.random.number({ min: 50, max: 200 }),\r\n      model: faker.name.firstName(),\r\n      manufacturer: faker.name.firstName(),\r\n      class: faker.name.firstName(),\r\n      cost: faker.random.number({ min: 500000, max: 200000000 }),\r\n      hyperdrive: faker.random.number({ min: 1, max: 10 }),\r\n      mglt: faker.random.number({ min: 10, max: 20 }),\r\n      length: faker.random.number({ min: 100000, max: 200000000 }),\r\n      cargo: faker.random.number({ min: 1000, max: 100000 }),\r\n      crew: faker.random.number({ min: 1, max: 100000 }),\r\n      passengers: faker.random.number({ min: 1, max: 100000 }),\r\n      imageSrc: `https://starwars-visualguide.com/assets/img/starships/${id}.jpg`\r\n    }\r\n  }\r\n}\r\n\r\n\r\nclass MockApiService extends AbstractApi {\r\n  \r\n  generator = new MockResourceGenerator()\r\n\r\n  static get MAX_PLANETS() {\r\n    return 61\r\n  }\r\n\r\n  _delay = process.env.REACT_APP_MOCK_API_DELAY\r\n\r\n  _delayed(data) {\r\n    return new Promise( (resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve(data)\r\n      }, this._delay)\r\n    })\r\n  }\r\n\r\n  // People\r\n  getAllPeople = () => {\r\n    const items = Array.from(Array(10), (value, index) => {\r\n      return this.generator.makePerson(index + 1)\r\n    })\r\n    return this._delayed(items)\r\n  }\r\n\r\n  getPerson = (id) => {\r\n    return this._delayed(this.generator.makePerson(id))\r\n  }\r\n\r\n  // Planets\r\n  getAllPlanets = () => {\r\n    const items = Array.from(Array(10), (value, index) => {\r\n      return this.generator.makePlanet(index + 1)\r\n    })\r\n    return this._delayed(items)\r\n  }\r\n\r\n  getPlanet = (id) => {\r\n    return this._delayed(this.generator.makePlanet(id))\r\n  }\r\n\r\n  // Ships\r\n  getAllShips = () => {\r\n    const items = Array.from(Array(10), (value, index) => {\r\n      return this.generator.makeShip(index + 1)\r\n    })\r\n    return this._delayed(items)\r\n  }\r\n\r\n  getShip = (id) => {\r\n    return this._delayed(this.generator.makeShip(id))\r\n  }\r\n}\r\n\r\n\r\nexport default MockApiService\r\n","import { AbstractApi, ApiTransformer } from './AbstractApi'\r\n\r\n\r\nclass SWApiTransformer extends ApiTransformer {\r\n  extractId(resource) {\r\n    return resource.url.match(/\\/(\\d+)\\/$/)[1]\r\n  }\r\n\r\n  transformPlanet(planet) {\r\n    const id = this.extractId(planet)\r\n    return ({\r\n      id,\r\n      name: planet.name,\r\n      population: planet.population,\r\n      diameter: planet.diameter,\r\n      rotationPeriod: planet.rotation_period,\r\n      orbitalPeriod: planet.orbital_period,\r\n      climate: planet.climate,\r\n      terrain: planet.terrain,\r\n      surfaceWater: planet.surface_water,\r\n      imageSrc: `https://starwars-visualguide.com/assets/img/planets/${id}.jpg`\r\n    })\r\n  }\r\n\r\n  transformPerson(person) {\r\n    const id = this.extractId(person)\r\n    return ({\r\n      id,\r\n      name: person.name,\r\n      height: person.height,\r\n      mass: person.mass,\r\n      hairColor: person.hair_color,\r\n      skinColor: person.skin_color,\r\n      eyeColor: person.eye_color,\r\n      birthYear: person.birth_year,\r\n      gender: person.gender,\r\n      imageSrc: `https://starwars-visualguide.com/assets/img/characters/${id}.jpg`\r\n    })\r\n  }\r\n\r\n  transformShip(ship) {\r\n    const id = this.extractId(ship)\r\n    return ({\r\n      id,\r\n      name: ship.name,\r\n      model: ship.model,\r\n      manufacturer: ship.manufacturer,\r\n      class: ship.starship_class,\r\n      cost: ship.cost_in_credits,\r\n      hyperdrive: ship.hyperdrive_rating,\r\n      mglt: ship.MGLT,\r\n      length: ship.length,\r\n      cargo: ship.cargo_capacity,\r\n      crew: ship.crew,\r\n      passengers: ship.passengers,\r\n      imageSrc: `https://starwars-visualguide.com/assets/img/starships/${id}.jpg`\r\n    })\r\n  }\r\n}\r\n\r\n\r\nclass SWApiService extends AbstractApi {\r\n  baseUrl = 'https://swapi.dev/api'\r\n  transformer = new SWApiTransformer()\r\n  \r\n  static get MAX_PLANETS() {\r\n    return 61\r\n  }\r\n  \r\n\r\n  async getResource(url) {\r\n    const response = await fetch(this.baseUrl + url)\r\n    if (!response.ok) {\r\n      throw new Error(`Could not fetch ${url}, status is ${response.status}`)\r\n    }\r\n    const body = await response.json()\r\n    return body\r\n  }\r\n\r\n  getAllPeople = async () => {\r\n    const res = await this.getResource('/people')\r\n    return res.results.map( person => this.transformer.transformPerson(person))\r\n  }\r\n\r\n  getPerson = async (id) => {\r\n    const res = await this.getResource(`/people/${id}`)\r\n    return this.transformer.transformPerson(res)\r\n  }\r\n\r\n  getAllPlanets = async () => {\r\n    const res = await this.getResource('/planets')\r\n    return res.results.map( planet => this.transformer.transformPlanet(planet))\r\n  }\r\n\r\n  getPlanet = async (id) => {\r\n    const res = await this.getResource(`/planets/${id}`)\r\n    return this.transformer.transformPlanet(res)\r\n  }\r\n\r\n  getAllShips = async () => {\r\n    const res = await this.getResource('/starships')\r\n    return res.results.map( ship => this.transformer.transformShip(ship))\r\n  }\r\n\r\n  getShip = async (id) => {\r\n    const res = await this.getResource(`/starships/${id}`)\r\n    return this.transformer.transformShip(res)\r\n  }\r\n}\r\n\r\nexport default SWApiService\r\n","import React from 'react'\r\nimport './Loader.css'\r\n\r\n\r\nexport default function Loader() {\r\n  return(\r\n    <div className=\"spinner-border text-primary\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction ErrorMessage({ error }) {\r\n  return (\r\n    <div className=\"alert alert-danger error-message\">\r\n      <h4 className=\"alert-heading\">Warning!</h4>\r\n      <p className=\"mb-0\">Something went wrong. Try again later.</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './RandomPlanet.css'\r\nimport Loader from '../Loader'\r\nimport ErrorMessage from '../ErrorMessage'\r\n\r\nexport default class RandomPlanet extends Component {\r\n\r\n  static propTypes = {\r\n    getData: PropTypes.func.isRequired\r\n  }\r\n\r\n  state = {\r\n    isLoading: true,\r\n    error: null,\r\n    planet: {\r\n      id: null,\r\n      name: 'planet',\r\n      population: 0,\r\n      diameter: '',\r\n      rotationPeriod: '',\r\n      orbitalPeriod: '',\r\n      climate: '',\r\n      terrain: '',\r\n      surfaceWater: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateData()\r\n  }\r\n\r\n  onError = error => {\r\n    this.setState({\r\n      isLoading: false,\r\n      error\r\n    })\r\n  }\r\n\r\n  updateData() {\r\n    const { getData } = this.props\r\n    const id = Math.floor(Math.random() * 10) + 1\r\n\r\n    getData(id)\r\n    .then( planet => {\r\n      this.setState({\r\n        planet,\r\n        isLoading: false\r\n      })\r\n    })\r\n    .catch(this.onError)\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, error, planet } = this.state\r\n\r\n    return(\r\n      <div className=\"random-planet card w-50\">\r\n        { error && <ErrorMessage error={ error } />}\r\n        { isLoading && <div className=\"ml-auto mr-auto align-self-center\"><Loader /></div> }\r\n        { (!isLoading && !error) && <ViewPlanet planet={planet} /> }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction ViewPlanet({ planet }) {\r\n  const { id, imageSrc, name, ...displayProps } = planet\r\n\r\n  const elements = Object.keys(displayProps).map( key => (\r\n    <li\r\n      className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n      key={ key }\r\n    >\r\n      { key }\r\n      <span className=\"badge badge-primary\">{ displayProps[key] }</span>\r\n    </li>\r\n  ))\r\n\r\n  return(\r\n    <Fragment>\r\n      <header className=\"card-header\">\r\n        { name }\r\n      </header>\r\n      <div className=\"card-body d-flex justify-content-between\">\r\n        <div className=\"planet-image w-25\">\r\n          <img\r\n            src={ imageSrc }\r\n            className=\"img-fluid\"\r\n            alt=\"Planet\"\r\n          />\r\n        </div>\r\n        <ul className=\"list-group ml-3 flex-grow-1\">\r\n          { elements }\r\n        </ul>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport ApiContext from '../context'\r\n\r\n// Gets access to context and returns mapped methods from API\r\n// mapMethodsToProps is either a function or a plain object\r\nconst withApiService = (mapMethodsToProps) => (WrappedComponent) => {\r\n  return class extends Component {\r\n    render() {\r\n      return(\r\n        <ApiContext.Consumer>\r\n          {\r\n            (apiService) => {\r\n              let mappedProps = {}\r\n              if (typeof mapMethodsToProps === 'function') {\r\n                mappedProps = mapMethodsToProps(apiService)\r\n              } else {\r\n                for (let [key, value] of Object.entries(mapMethodsToProps)) {\r\n                  mappedProps[key] = apiService[value]\r\n                }\r\n              }\r\n              \r\n              return(\r\n                <WrappedComponent {...this.props} {...mappedProps} />\r\n              )\r\n            }\r\n          }\r\n        </ApiContext.Consumer>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default withApiService\r\n","import RandomPlanet from './RandomPlanet'\r\nimport withApiService from '../../hocs/withApiService'\r\n\r\nexport default withApiService({ getData: 'getPlanet' })(RandomPlanet)\r\n","import React, { Component } from 'react'\r\nimport RandomPlanet from '../../components/RandomPlanet'\r\n\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>Random Planet</h2>\r\n        <RandomPlanet />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nexport default function Row({ left, right }) {\r\n  return(\r\n    <div className=\"row\">\r\n      <div className=\"col-4\">\r\n        { left }\r\n      </div>\r\n      <div className=\"col-6\">\r\n        { right }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Loader from '../Loader'\r\nimport ErrorMessage from '../ErrorMessage'\r\nimport './ItemDetails.css'\r\n\r\n\r\nexport const Record = ({ item, field, label, children }) => {\r\n  const value = (typeof children === 'function') ? children(item[field]) : item[field]\r\n\r\n  return(\r\n    <li className=\"list-group-item\">\r\n      { label }: { value }\r\n    </li>\r\n  )\r\n}\r\n\r\n\r\nexport class ItemDetails extends Component {\r\n  static propTypes = {\r\n    itemId: PropTypes.oneOfType([\r\n      PropTypes.string.isRequired,\r\n      PropTypes.number.isRequired\r\n    ]),\r\n    getData: PropTypes.func.isRequired\r\n  }\r\n\r\n  state = {\r\n    item: null,\r\n    isLoading: false,\r\n    error: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateData()\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.itemId !== this.props.itemId || prevProps.getData !== this.props.getData) {\r\n      this.updateData()\r\n    }\r\n  }\r\n\r\n  onError = error => {\r\n    this.setState({\r\n      isLoading: false,\r\n      error\r\n    })\r\n  }\r\n\r\n  updateData() {\r\n    const { itemId, getData } = this.props\r\n    if (!itemId) {\r\n      return\r\n    }\r\n\r\n    this.setState({ isLoading: true, error: null })\r\n\r\n    getData(itemId)\r\n      .then( item => {\r\n        this.setState({\r\n          item,\r\n          isLoading: false\r\n        })\r\n      })\r\n      .catch(this.onError)\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, error, item } = this.state\r\n\r\n    if (error) {\r\n      return <ErrorMessage error={ error } />\r\n    }\r\n\r\n    if (isLoading) {\r\n      return <Loader />\r\n    }\r\n\r\n    if (!item) {\r\n      return <div>Select an item from the list</div>\r\n    }\r\n\r\n    return (\r\n      <div className=\"card\">\r\n        {item.imageSrc &&\r\n          <div className=\"image-wrapper\">\r\n            <img src={item.imageSrc} className=\"img-fluid\" alt=\"Item Details\" />\r\n          </div>\r\n        }\r\n        <h3 className=\"card-header\">{ item.name }</h3>\r\n        <div className=\"card-body\">\r\n          <ul className=\"list-group item-details\">\r\n            { \r\n              React.Children.map(this.props.children, (child) => {\r\n                return React.cloneElement(child, { item })\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ItemDetails\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './ItemList.css'\r\n\r\n\r\nexport class ItemList extends Component {\r\n  \r\n  static propTypes = {\r\n    onItemSelected: PropTypes.func,\r\n    selectedItemId: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n    renderItem: PropTypes.func\r\n  }\r\n\r\n  static defaultProps = {\r\n    onItemSelected: () => {},\r\n    renderItem: item => item.name\r\n  }\r\n\r\n  state = {\r\n    selectedItemId: this.props.selectedItemId,\r\n  }\r\n\r\n  selectItem = (id) => {\r\n    this.setState({ selectedItemId: id })\r\n    this.props.onItemSelected(id)\r\n  }\r\n\r\n  render() {\r\n    const { selectedItemId } = this.state\r\n    const { data, renderItem } = this.props\r\n\r\n    const elements = data.map( item => {\r\n      let classNames = 'list-group-item'\r\n      if (item.id === +selectedItemId) {\r\n        classNames += ' active'\r\n      }\r\n\r\n      return (\r\n        <li className={ classNames }\r\n          key={item.id}\r\n          onClick={ () => this.selectItem(item.id) }\r\n        >{ renderItem(item) }</li>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <ul className=\"list-group item-list\">\r\n        { elements }\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ItemList\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Loader from '../components/Loader'\r\nimport ErrorMessage from '../components/ErrorMessage'\r\n\r\n\r\nconst withData = (WrappedComponent) => {\r\n  return class extends Component {\r\n    \r\n    state = {\r\n      data: null,\r\n      isLoading: true,\r\n      error: null\r\n    }\r\n\r\n    static propTypes = {\r\n      getData: PropTypes.func.isRequired\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.updateData()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.getData !== prevProps.getData) { // on API change\r\n        this.updateData()\r\n      }\r\n    }\r\n\r\n    onError = error => {\r\n      this.setState({\r\n        isLoading: false,\r\n        error\r\n      })\r\n    }\r\n\r\n    updateData() {\r\n\r\n      this.setState({\r\n        isLoading: true,\r\n        error: null\r\n      })\r\n\r\n      this.props.getData()\r\n        .then( data => {\r\n          this.setState({\r\n            data,\r\n            isLoading: false\r\n          })\r\n        })\r\n        .catch(this.onError)\r\n    }\r\n\r\n    render() {\r\n      const { isLoading, error, data } = this.state\r\n\r\n      if (error) {\r\n        return <ErrorMessage error={ error } />\r\n      }\r\n  \r\n      if (isLoading) {\r\n        return <Loader />\r\n      }\r\n\r\n      return <WrappedComponent {...this.props} data={data} />\r\n    }\r\n  }\r\n}\r\n\r\nexport default withData\r\n","import React, { Component } from 'react'\r\nimport ErrorMessage from './ErrorMessage'\r\n\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    hasError: false\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true }\r\n  }\r\n\r\n  render() {\r\n    return this.state.hasError ? <ErrorMessage /> : this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Row from '../../components/Row'\r\nimport ItemDetails, { Record } from '../../components/ItemDetails'\r\nimport ItemList from '../../components/ItemList'\r\nimport withApiService from '../../hocs/withApiService'\r\nimport withData from '../../hocs/withData'\r\nimport ErrorBoundary from '../../components/ErrorBoundary'\r\nimport './People.css'\r\n\r\n\r\nconst PersonDetails = withApiService({\r\n  getData: 'getPerson'\r\n})(ItemDetails)\r\n\r\nconst PeopleList = withApiService({\r\n  getData: 'getAllPeople'\r\n})(withData(ItemList))\r\n\r\n\r\nconst People = ( { match, history } ) => {\r\n  const { id } = match.params\r\n\r\n  const list = \r\n    <PeopleList\r\n      selectedItemId={ id }\r\n      onItemSelected={ id => history.push(id.toString()) }\r\n      renderItem={ item => `${item.name}` }\r\n    />\r\n\r\n  const details = \r\n    <PersonDetails itemId={ id }>\r\n      <Record field=\"height\" label=\"Height\" />\r\n      <Record field=\"gender\" label=\"Gender\" />\r\n      <Record field=\"birthYear\" label=\"Birthyear\" />\r\n      <Record field=\"eyeColor\" label=\"Eye Color\" />\r\n      <Record field=\"hairColor\" label=\"Hair Color\" />\r\n    </PersonDetails>\r\n\r\n  return (\r\n    <div className=\"people-page\">\r\n      <h2 className=\"mt-4\">People</h2>\r\n      <ErrorBoundary>\r\n        <Row left={ list } right={ details } />\r\n      </ErrorBoundary>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(People)\r\n","import React from 'react'\r\nimport { withRouter } from \"react-router-dom\"\r\nimport ItemList from '../../components/ItemList'\r\nimport ItemDetails, { Record } from '../../components/ItemDetails'\r\nimport withApiService from '../../hocs/withApiService'\r\nimport withData from '../../hocs/withData'\r\nimport Row from '../../components/Row'\r\nimport ErrorBoundary from '../../components/ErrorBoundary'\r\n\r\n\r\nconst PlanetDetails = withApiService({\r\n  getData: 'getPlanet'\r\n})(ItemDetails)\r\n\r\nconst PlanetList = withApiService({\r\n  getData: 'getAllPlanets'\r\n})(withData(ItemList))\r\n\r\n\r\nconst Planets = ({ history, match } ) => {\r\n  const { id } = match.params\r\n\r\n  const list = \r\n    <PlanetList\r\n      selectedItemId={ id }\r\n      onItemSelected={ id => history.push(id.toString()) }\r\n    />\r\n\r\n  const details =\r\n    <PlanetDetails itemId={ id }>\r\n      <Record field=\"name\" label=\"Name\" />\r\n      <Record field=\"diameter\" label=\"Diameter\" />\r\n      <Record field=\"population\" label=\"Population\" />\r\n    </PlanetDetails>\r\n\r\n  return (\r\n    <div className=\"planets-page\">\r\n      <h2 className=\"mt-4\">Planets</h2>\r\n      <ErrorBoundary>\r\n        <Row left={ list } right={ details } />\r\n      </ErrorBoundary>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Planets)\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport ItemList from '../../components/ItemList'\r\nimport ItemDetails, { Record } from '../../components/ItemDetails'\r\nimport withApiService from '../../hocs/withApiService'\r\nimport withData from '../../hocs/withData'\r\nimport Row from '../../components/Row'\r\nimport ErrorBoundary from '../../components/ErrorBoundary'\r\n\r\n\r\nconst ShipDetails = withApiService({\r\n  getData: 'getShip'\r\n})(ItemDetails)\r\n\r\nconst ShipList = withApiService({\r\n  getData: 'getAllShips'\r\n})(withData(ItemList))\r\n\r\n\r\nconst Starships = ({ match, history }) => {\r\n\r\n  const { id } = match.params\r\n\r\n  const list = \r\n    <ShipList\r\n      selectedItemId={ id }\r\n      onItemSelected={ id => history.push(id.toString()) }\r\n    />\r\n\r\n  const details =\r\n    <ShipDetails itemId={ id }>\r\n      <Record field=\"model\" label=\"Model\" />\r\n      <Record field=\"manufacturer\" label=\"Manufacturer\" />\r\n      <Record field=\"class\" label=\"Class\" />\r\n      <Record field=\"cost\" label=\"Cost\">\r\n        { v => `${Number(v).toLocaleString()} credits` }\r\n      </Record>\r\n      <Record field=\"hyperdrive\" label=\"Hyperdrive Rating\" />\r\n      <Record field=\"mglt\" label=\"MGLT\">\r\n        {v => Number(v).toFixed(2) }\r\n      </Record>\r\n      <Record field=\"length\" label=\"Length\">\r\n        { v => `${Number(v).toLocaleString()}m` }\r\n      </Record>\r\n      <Record field=\"cargo\" label=\"Cargo Capacity\">\r\n        { v => `${Number(v).toLocaleString()} metric tons` }\r\n      </Record>\r\n      <Record field=\"crew\" label=\"Minimum Crew\">\r\n        { v => Number(v).toLocaleString() }\r\n      </Record>\r\n      <Record field=\"passengers\" label=\"Passengers\">\r\n        { v => Number(v).toLocaleString() }\r\n      </Record>\r\n    </ShipDetails>\r\n\r\n  return (\r\n    <div className=\"starships-page\">\r\n      <h2 className=\"mt-4\">Starships</h2>\r\n      <ErrorBoundary>\r\n        <Row left={ list } right={ details } />\r\n      </ErrorBoundary>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Starships)\r\n","import React from 'react'\r\n\r\nexport default function ErrorPage() {\r\n  return (\r\n    <div>\r\n      <h1>404 Page Not Found</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport HomePage from '../pages/Home'\r\nimport PeoplePage from '../pages/People'\r\nimport PlanetsPage from '../pages/Planets'\r\nimport StarshipsPage from '../pages/Starships'\r\nimport ErrorPage from '../pages/ErrorPage'\r\n\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={ HomePage } />\r\n      <Route path=\"/planets/:id?\" component={ PlanetsPage } />\r\n      <Route path=\"/people/:id?\" component={ PeoplePage } />\r\n      <Route path=\"/starships/:id?\" component={ StarshipsPage } />\r\n      <Route path=\"*\" component={ ErrorPage } />\r\n    </Switch>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport ApiContext from './context'\nimport Navbar from './components/Navbar'\nimport MockApiService from './services/MockApiService'\nimport SWApiService from './services/SWApiService'\nimport Routes from './components/Routes'\n\n\nclass App extends Component {\n  state = {\n    apiService: process.env.REACT_APP_API === 'mock'\n                ? new MockApiService() : new SWApiService()\n  }\n\n  toggleService = () => {\n    this.setState( ({ apiService }) => {\n      const Service = apiService instanceof SWApiService ? MockApiService : SWApiService\n      return {\n        apiService: new Service()\n      }\n    })\n  }\n\n  render() {\n    const { apiService } = this.state\n    const serviceName = apiService instanceof SWApiService ? 'Server' : 'Mock'\n\n    document.title = `Star Wars DB using ${serviceName} API`\n\n    return (\n      <ApiContext.Provider value={ apiService }>\n        <Router basename={ process.env.PUBLIC_URL }>\n          <div className=\"container\">\n            <Navbar onServiceChange={ this.toggleService } serviceName={ serviceName } />\n            <Routes />\n          </div>\n        </Router>\n      </ApiContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}